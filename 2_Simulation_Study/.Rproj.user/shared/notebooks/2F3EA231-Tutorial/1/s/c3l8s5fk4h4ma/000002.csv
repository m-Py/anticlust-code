"0","seed <- sample(10000, 1)
# Optimize the variance criterion
# (tends to maximize similarity in feature means)
anticlusters <- anticlustering(
  features,
  K = 3,
  objective = ""variance"",
  categories = schaper2019$room,
  seed = seed,
  nrep = 10000 # increase for better results
)
by(schaper2019[, 3:6], anticlusters, function(x) round(colMeans(x), 2))
"
"1","anticlusters"
"1",""
"1",": "
"1",""
"1","1"
"1",""
"1","
"
"1","  rating_consistent "
"1","rating_inconsistent "
"1","          syllables "
"1","          frequency "
"1","
"
"1","               4.51 "
"1","               1.10 "
"1","               3.41 "
"1","              18.31 "
"1","
"
"1","------------------------------------------------------------------------------------------"
"1"," "
"1","
"
"1","anticlusters"
"1",""
"1",": "
"1",""
"1","2"
"1",""
"1","
"
"1","  rating_consistent "
"1","rating_inconsistent "
"1","          syllables "
"1","          frequency "
"1","
"
"1","               4.47 "
"1","               1.11 "
"1","               3.44 "
"1","              18.28 "
"1","
"
"1","------------------------------------------------------------------------------------------"
"1"," "
"1","
"
"1","anticlusters"
"1",""
"1",": "
"1",""
"1","3"
"1",""
"1","
"
"1","  rating_consistent "
"1","rating_inconsistent "
"1","          syllables "
"1","          frequency "
"1","
"
"1","               4.49 "
"1","               1.10 "
"1","               3.41 "
"1","              18.34 "
"1","
"
